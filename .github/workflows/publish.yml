# This workflow will upload a Python Package using setup.py/twine when a release is created
# For more information see:
# https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Create Release

on:
  release:
    types: [published]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install build
        pip install build twine setuptools
    - name: Build and publish
      env:
        TWINE_USERNAME: __token__
        # The PYPI_PASSWORD must be a pypi token with the "pypi-" prefix with sufficient permissions to upload this package
        # https://pypi.org/help/#apitoken
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python3 -m build
        twine upload dist/*
  make_executable:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Make Executable
        run: |
          python -m pip install pyinstaller .
          pyinstaller --name doppkit --onefile --console --icon resources/grid-icon.ico --hidden-import aiofiles cli.py
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./dist/doppkit.exe
          asset_name: doppkit.exe
          asset_content_type: application/vnd.microsoft.portable-executable
